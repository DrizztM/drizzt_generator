<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="drizzt.mapper.CiaAppMapper" >
  <resultMap id="BaseResultMap" type="drizzt.model.CiaApp" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="appId" property="appId" jdbcType="VARCHAR" />
    <result column="authKey" property="authKey" jdbcType="VARCHAR" />
    <result column="chargeState" property="chargeState" jdbcType="VARCHAR" />
    <result column="openState" property="openState" jdbcType="VARCHAR" />
    <result column="regDate" property="regDate" jdbcType="TIMESTAMP" />
    <result column="tryNum" property="tryNum" jdbcType="INTEGER" />
    <result column="tryState" property="tryState" jdbcType="VARCHAR" />
    <result column="developerId" property="developerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, version, appId, authKey, chargeState, openState, regDate, tryNum, 
    tryState, developerId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="drizzt.model.CiaAppExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cia_app
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cia_app
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cia_app
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="drizzt.model.CiaAppExample" >
    delete from cia_app
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="drizzt.model.CiaApp" >
    insert into cia_app (id, type, name, 
      version, appId, authKey, 
      chargeState, openState, regDate, 
      tryNum, tryState, developerId
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{authKey,jdbcType=VARCHAR}, 
      #{chargeState,jdbcType=VARCHAR}, #{openState,jdbcType=VARCHAR}, #{regDate,jdbcType=TIMESTAMP}, 
      #{tryNum,jdbcType=INTEGER}, #{tryState,jdbcType=VARCHAR}, #{developerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="drizzt.model.CiaApp" >
    insert into cia_app
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="appId != null" >
        appId,
      </if>
      <if test="authKey != null" >
        authKey,
      </if>
      <if test="chargeState != null" >
        chargeState,
      </if>
      <if test="openState != null" >
        openState,
      </if>
      <if test="regDate != null" >
        regDate,
      </if>
      <if test="tryNum != null" >
        tryNum,
      </if>
      <if test="tryState != null" >
        tryState,
      </if>
      <if test="developerId != null" >
        developerId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null" >
        #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="chargeState != null" >
        #{chargeState,jdbcType=VARCHAR},
      </if>
      <if test="openState != null" >
        #{openState,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null" >
        #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tryNum != null" >
        #{tryNum,jdbcType=INTEGER},
      </if>
      <if test="tryState != null" >
        #{tryState,jdbcType=VARCHAR},
      </if>
      <if test="developerId != null" >
        #{developerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="drizzt.model.CiaAppExample" resultType="java.lang.Integer" >
    select count(*) from cia_app
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cia_app
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null" >
        appId = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.authKey != null" >
        authKey = #{record.authKey,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeState != null" >
        chargeState = #{record.chargeState,jdbcType=VARCHAR},
      </if>
      <if test="record.openState != null" >
        openState = #{record.openState,jdbcType=VARCHAR},
      </if>
      <if test="record.regDate != null" >
        regDate = #{record.regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tryNum != null" >
        tryNum = #{record.tryNum,jdbcType=INTEGER},
      </if>
      <if test="record.tryState != null" >
        tryState = #{record.tryState,jdbcType=VARCHAR},
      </if>
      <if test="record.developerId != null" >
        developerId = #{record.developerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cia_app
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      appId = #{record.appId,jdbcType=VARCHAR},
      authKey = #{record.authKey,jdbcType=VARCHAR},
      chargeState = #{record.chargeState,jdbcType=VARCHAR},
      openState = #{record.openState,jdbcType=VARCHAR},
      regDate = #{record.regDate,jdbcType=TIMESTAMP},
      tryNum = #{record.tryNum,jdbcType=INTEGER},
      tryState = #{record.tryState,jdbcType=VARCHAR},
      developerId = #{record.developerId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="drizzt.model.CiaApp" >
    update cia_app
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        appId = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null" >
        authKey = #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="chargeState != null" >
        chargeState = #{chargeState,jdbcType=VARCHAR},
      </if>
      <if test="openState != null" >
        openState = #{openState,jdbcType=VARCHAR},
      </if>
      <if test="regDate != null" >
        regDate = #{regDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tryNum != null" >
        tryNum = #{tryNum,jdbcType=INTEGER},
      </if>
      <if test="tryState != null" >
        tryState = #{tryState,jdbcType=VARCHAR},
      </if>
      <if test="developerId != null" >
        developerId = #{developerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="drizzt.model.CiaApp" >
    update cia_app
    set type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      appId = #{appId,jdbcType=VARCHAR},
      authKey = #{authKey,jdbcType=VARCHAR},
      chargeState = #{chargeState,jdbcType=VARCHAR},
      openState = #{openState,jdbcType=VARCHAR},
      regDate = #{regDate,jdbcType=TIMESTAMP},
      tryNum = #{tryNum,jdbcType=INTEGER},
      tryState = #{tryState,jdbcType=VARCHAR},
      developerId = #{developerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectPage" resultMap="BaseResultMap" parameterType="drizzt.model.CiaAppExample" >
    select 
<if test="distinct" > 
distinct 
</if> 
<include refid="Base_Column_List" /> 
from cia_app
<if test="_parameter != null" > 
<include refid="Example_Where_Clause" /> 
</if> 
<if test="orderByClause != null" > 
order by ${orderByClause} 
</if> 
limit #{pageIndex},#{pageSize} 

  </select>
</mapper>