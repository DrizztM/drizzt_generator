<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="drizzt.mapper.CiaAuthSnMapper" >
  <resultMap id="BaseResultMap" type="drizzt.model.CiaAuthSn" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="timestamp" property="timestamp" jdbcType="BIGINT" />
    <result column="step" property="step" jdbcType="VARCHAR" />
    <result column="authId" property="authId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, timestamp, step, authId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="drizzt.model.CiaAuthSnExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cia_auth_sn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cia_auth_sn
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cia_auth_sn
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="drizzt.model.CiaAuthSnExample" >
    delete from cia_auth_sn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="drizzt.model.CiaAuthSn" >
    insert into cia_auth_sn (id, timestamp, step, 
      authId)
    values (#{id,jdbcType=INTEGER}, #{timestamp,jdbcType=BIGINT}, #{step,jdbcType=VARCHAR}, 
      #{authId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="drizzt.model.CiaAuthSn" >
    insert into cia_auth_sn
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="timestamp != null" >
        timestamp,
      </if>
      <if test="step != null" >
        step,
      </if>
      <if test="authId != null" >
        authId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="step != null" >
        #{step,jdbcType=VARCHAR},
      </if>
      <if test="authId != null" >
        #{authId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="drizzt.model.CiaAuthSnExample" resultType="java.lang.Integer" >
    select count(*) from cia_auth_sn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cia_auth_sn
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null" >
        timestamp = #{record.timestamp,jdbcType=BIGINT},
      </if>
      <if test="record.step != null" >
        step = #{record.step,jdbcType=VARCHAR},
      </if>
      <if test="record.authId != null" >
        authId = #{record.authId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cia_auth_sn
    set id = #{record.id,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=BIGINT},
      step = #{record.step,jdbcType=VARCHAR},
      authId = #{record.authId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="drizzt.model.CiaAuthSn" >
    update cia_auth_sn
    <set >
      <if test="timestamp != null" >
        timestamp = #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="step != null" >
        step = #{step,jdbcType=VARCHAR},
      </if>
      <if test="authId != null" >
        authId = #{authId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="drizzt.model.CiaAuthSn" >
    update cia_auth_sn
    set timestamp = #{timestamp,jdbcType=BIGINT},
      step = #{step,jdbcType=VARCHAR},
      authId = #{authId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectPage" resultMap="BaseResultMap" parameterType="drizzt.model.CiaAuthSnExample" >
    select 
<if test="distinct" > 
distinct 
</if> 
<include refid="Base_Column_List" /> 
from cia_auth_sn
<if test="_parameter != null" > 
<include refid="Example_Where_Clause" /> 
</if> 
<if test="orderByClause != null" > 
order by ${orderByClause} 
</if> 
limit #{pageIndex},#{pageSize} 

  </select>
</mapper>